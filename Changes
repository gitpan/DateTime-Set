Changes for DateTime::Set

0.07     2003-05-23
- some tweaking on intersection, union, and in the recurrence generator.
- more tests

0.06     2003-05-14
- added 'use warnings' in some tests, added DateTime 0.12 prereq.

0.04     2003-05-12
- change "closest" code to avoid duration comparison

0.03     2003-04-27
- fixes in Set.pm as_list, span.
- iterator accepts 'span' parameters.  Ben Bennett
- remove deprecated DateTime::Set->new and DateTime::SpanSet->new.  Dave Rolsky
- requires Set::Infinite 0.49

0.02     2003-04-20
- removed some calls to 'new'
- added many methods from DT::Event::Recurrence
- add 'span' parameter to as_list
- from_recurrence now accepts next + previous

0.01     2003-04-19

- first "official" release.
- implemented DateTime::SpanSet->from_sets and
  DateTime::SpanSet->from_set_and_duration
- Many doc tweaks.  Dave Rolsky
- DateTime::Span->duration and DateTime::SpanSet->duration now return
infinity instead of undef for infinite spans.  Dave Rolsky
- Added DateTime::SpanSet->empty_set.  Dave Rolsky

0.00_20  2003-04-10

- Docs for DateTime::SpanSet API 
  (not implemented)
- DateTime::Span API: 
  from_datetime_and_duration, from_datetimes


0.00_18  2003-03-25

- changes docs, changed API
  from_recurrence, from_datetimes, new()
- as_list
- previous() method (quite untested)
- small API changes
- revised docs, from Dave Rolsky
- small bugfix in creating open spans
- added DateTime::Span and DateTime::SpanSet
- put "..." to mark where we need more docs
- DateTime::Set and DateTime::Span API look ok.


0.00_13  2003-03-19

- added tests for set operations with recurrences/add
- iterator passes all tests
- the API is complete, as described in SYNOPSIS
- small fix in add() syntax; accepts a duration=> parameter
- iterator, next


0.00_10  2003-03-14

- union, intersection
- experimental code to generate recurrence from a simple callback


0.00_07  2003-02-28

- added experimental method create_recurrence()
- added experimental method add_duration()
- improved SYNOPSIS
- added 'immutability' tests
- new() will not try to clone non-DateTime parameters (such as the
  Infinity value)
- The program will die with an error message, 
  if one tries to use offset() or quantize() methods
  These methods might come back in a later version.
- new() clones its parameters.
  This means the parameters don't have to be immutable
- new() will give an error message if we try to use a scalar parameter
  instead of a DateTime
- Uses Set::Infinite as base class, instead of Date::Set::Timezone
  This means some methods just disappeared, like event() and exclude().
  RFC2445 support might come back in a later revision.
- Removed experimental Autoload code
- Added 'Changes' and 'README'
- moved POD to end of source file.

