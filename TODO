TODO list for DT::Set, DT::Span, and DT::SpanSet

- New method: intersected_spans
  Suggested by Reinhold May
  Name suggested by Dave Rolsky

- New methods: map / grep
  From a discussion with Andrew Pimlott and Dave Rolsky

- test DT::SpanSet->iterate; fix examples.

- implement set( locale => .. ) in Span and SpanSet
  implement iterator( \&sub )

- specify what these DT::SpanSet methods should return -
  a datetime, a span, or what - under discussion in datetime@perl.org 
    current( $dt|$span )
    closest( $dt|$span )

- discuss functions like 
    is_infinite
    is_empty 

- implement faster DT::Set::complement(), 
  using 'function composition'

- move all 'set-specific' code to Set::Infinite::_recurrence 
  use accessors instead of structure references

- functions like before(), after(), during() might be useful
  in DT::Span
  or maybe these should be called next(), previous(), current(), closest()

- document better:
  how to transform a Span into an iterator - for example,
  get the list of days in a span

- DateTime::SpanSet duration() returns 'Inf' scalar - 
  should be a DT::Duration::Infinite
  (DT::Span is correct)

- optimization: rewrite intersection of recurrences 'previous' function

